# Local Setup Guide for Gemini Batch Prediction Project

## Required Dependencies
Copy these into your requirements.txt file:

email-validator==2.1.1
flask==3.0.3
flask-login==0.6.3
flask-session==0.6.0
flask-sqlalchemy==3.1.1
flask-wtf==1.2.1
google-api-core==2.17.1
google-generativeai==0.5.2
gunicorn==23.0.0
psycopg2-binary==2.9.9
python-dotenv==1.0.1
rich==13.7.1
sqlalchemy==2.0.28
trafilatura==1.7.0
werkzeug==3.0.1
youtube-transcript-api==0.6.2

## Environment Setup (.env file)
Create a .env file with these variables:

DATABASE_URL=postgresql://username:password@localhost:5432/your_database_name
GEMINI_API_KEY=your_gemini_api_key
SESSION_SECRET=your_random_secret_key

## Database Setup
1. Create a PostgreSQL database
2. Update DATABASE_URL in .env
3. Run in Python:
   from app import create_app, db
   app = create_app()
   with app.app_context():
       db.create_all()

## Starting the Application
For development:
  python main.py

With Gunicorn (production):
  gunicorn --bind 0.0.0.0:5000 main:app

## Core Files
- main.py - Application entry point
- app.py - Flask app configuration
- models.py - Database models
- batch_predictor.py - Handles question processing with Gemini API
- context_cache.py - Caches API contexts
- transcript_handler.py - Manages transcript processing
- gemini_batch_processor.py - Gemini API client
- video_transcript_extractor.py - YouTube transcript extraction
- routes/ - Flask route blueprints
- forms/ - Form definitions
- templates/ - HTML templates

## Getting a Gemini API Key
1. Visit https://makersuite.google.com/app/apikey
2. Create a new API key
3. Add to .env file
